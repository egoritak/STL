uint8_t pearsonDigits[] = {
    106, 15,  244, 74,  82,  236, 14,  57,  224, 61,  241, 204, 26,  54,  30,
    12,  18,  214, 166, 87,  107, 253, 152, 111, 79,  7,   27,  70,  147, 56,
    75,  170, 231, 230, 248, 92,  63,  157, 1,   239, 154, 185, 20,  249, 175,
    177, 250, 84,  80,  127, 150, 234, 211, 139, 11,  125, 4,   229, 138, 117,
    247, 155, 196, 101, 120, 173, 25,  93,  186, 180, 128, 72,  17,  76,  77,
    198, 116, 8,   134, 151, 91,  86,  113, 254, 251, 33,  135, 67,  118, 215,
    89,  183, 189, 213, 90,  94,  78,  5,   129, 55,  97,  233, 193, 45,  226,
    232, 212, 217, 66,  37,  109, 227, 209, 143, 181, 100, 35,  162, 133, 69,
    58,  81,  195, 223, 132, 19,  240, 252, 71,  9,   190, 73,  148, 200, 153,
    203, 110, 21,  163, 62,  222, 46,  38,  164, 50,  207, 103, 51,  192, 60,
    96,  119, 41,  122, 136, 28,  165, 124, 242, 176, 114, 208, 156, 65,  184,
    140, 39,  121, 174, 228, 34,  243, 182, 216, 188, 99,  115, 210, 172, 145,
    225, 29,  142, 105, 83,  10,  42,  206, 235, 199, 85,  219, 160, 88,  168,
    238, 141, 194, 167, 16,  221, 112, 237, 159, 23,  0,   104, 218, 13,  179,
    205, 178, 255, 22,  52,  126, 123, 245, 59,  130, 202, 2,   32,  48,  169,
    47,  197, 40,  53,  161, 6,   43,  98,  137, 108, 44,  102, 95,  191, 144,
    201, 246, 171, 49,  31,  68,  131, 3,   64,  149, 146, 36,  187, 24,  220,
    158};

uint64_t pear16(std::string input) {
    size_t len = input.size();
    uint64_t result = 0;
    for (int i = 0; i < 8; i++) {
        uint8_t h = pearsonDigits[(input.at(0) + i) % 256];
        for (int j = 1; j < len; j++) {
            h = pearsonDigits[h ^ input.at(j)];
        }
        result += h;
    }
    return result;
}

float quake3(float number) {
    long i;
    float x2, y;
    const float threehalfs = 1.5F;

    x2 = number * 0.5F;
    y = number;
    i = *(long*)&y;             // evil floating point bit level hacking
    i = 0x5f3759df - (i >> 1);  // what the fuck?
    y = *(float*)&i;
    y = y * (threehalfs - (x2 * y * y));

    return y;
}

int floor(float number) {
    if (int(number) < number)
        return int(number) + 1;
    else
        return int(number);
}
